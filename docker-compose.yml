version: '3.8'

services:
#######container d'initialisation#######

  init:
    build: 
      context: .
      dockerfile: ./init-Dockerfile
    container_name: init
    volumes:
      - ${FOLDER}:/usr/src/app/mount/
    env_file:
    - .env
    restart: no

  init2:
    build: 
      context: .
      dockerfile: ./init2-Dockerfile
    container_name: init2
    volumes:
      - ${FOLDER}/xml:/usr/src/app/mount/
    env_file:
    - .env
    depends_on:
      torrent:
        condition: service_started
    networks:
      - backend
    restart: no
    
#######Partie Client########
  

  nginx-web:
    #site web présenté au client
    build: 
      context: .
      dockerfile: ./web-Dockerfile
    container_name: web
    volumes:
      - ${FOLDER}/xml:/usr/share/nginx/html/xml:ro
      - ${FOLDER}/torrent:/usr/share/nginx/html/torrent:ro
      - ${FOLDER}/data:/usr/share/nginx/html/data:ro
    ports:
      - "80:80"
    depends_on:
      init2:
        condition: service_completed_successfully
    env_file:
    - .env
    restart: unless-stopped
  
  opentracker:
    #tracker de torrent
    image: lednerb/opentracker-docker
    container_name: opentracker
    ports:
      - "6969:6969/udp"
      - "6969:6969"
    restart: unless-stopped

#  nginx-webseed:
#    #service web pour servir de HTTP seed, le mettre à part permet de le binder sur une carte réseau différente pour ne pas impacter le reste des services (optionnel)
#    image: nginx
#    container_name: httpseed
#    volumes:
#      - ${FOLDER}:/usr/share/nginx/html:ro
#    ports:
#      - "8080:80"
#    depends_on:
#      init:
#        condition: service_completed_successfully
#    env_file:
#    - .env      
#    restart: unless-stopped

#######Partie Admin########
  nginx-webadmin:
    #site web pour ajouter, supprimer, ou editer des jeux
    build: 
      context: .
      dockerfile: ./webadmin-Dockerfile
    container_name: web-admin
    ports:
      - "82:82"
    networks:
      - backend
    depends_on:
      backend:
        condition: service_started     
    restart: unless-stopped

  torrent:
    #container qui construit les torrents
    build: 
      context: .
      dockerfile: ./torrent-Dockerfile
    container_name: torrent
    volumes:
      - ${FOLDER}/data:/usr/src/app/data:ro
      - ${FOLDER}/xml:/usr/src/app/xml
      - ${FOLDER}/torrent:/usr/src/app/torrent
    networks:
      - backend
    depends_on:
      init:
        condition: service_completed_successfully
    env_file:
    - .env
    restart: unless-stopped

  backend:
    #container qui sert de backend au site d'admin
    build: 
      context: .
      dockerfile: ./backend-Dockerfile
    container_name: backend
    volumes:
      - ${FOLDER}/data:/usr/src/app/data
      - ${FOLDER}/xml:/usr/src/app/xml
      - ${FOLDER}/torrent:/usr/src/app/torrent
    networks:
      - backend
    depends_on:
      init:
        condition: service_completed_successfully
    env_file:
    - .env
    restart: unless-stopped

networks:
  backend:
    name: backend
